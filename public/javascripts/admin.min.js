angular.module("myAdmin",["ui.router","ngResource","ngFileUpload","adminRoutes","gamesAdmin","gourmetsAdmin","hearthStoneAdmin","myServices","myConfig"]).run(function($rootScope,$state,$http){$http.defaults.headers.common.auth="ljpon3UUVTMMmIhE6Kcf",$http.defaults.headers.post.auth="HNoHW7HUKEYxW5DFxaVj",$rootScope.imagePath="http://zhuhaolin.com/images/",$rootScope.$on("$stateChangeSuccess",function(){$rootScope.title=$state.current.title})}).controller("imageUploadController",["$scope","Upload",function($scope,Upload){$scope.$watch("file",function(file){file&&$scope.upload($scope.file)}),$scope.upload=function(file){Upload.upload({url:"/api/images",file:file}).progress(function(evt){$scope.uploading=!0,$scope.progress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){$scope.progress=0,$scope.success=!0,$scope.imageName=data}).error(function(data,status,headers,config){$scope.fail=!0,$scope.msg=data})}}]),angular.module("gamesAdmin",[]).controller("gamesController",function($scope,Game,Count,GAME_PLATFORMS,GAME_GENRES){Count.get({model:"games"},function(count){$scope.count=count.count,$scope.games=Game.query({limit:count.count})}),$scope.platforms=GAME_PLATFORMS,$scope.genres=GAME_GENRES}).controller("gameCreateController",function($scope,$state,Game,GAME_PLATFORMS,GAME_GENRES){$scope.fields=["title","name","developer","publisher","release_at","buy_at","rate","image"],$scope.platforms=GAME_PLATFORMS,$scope.genres=GAME_GENRES,$scope.game=new Game,$scope.saveGame=function(){$scope.game.$save(function(data){data.success?$state.go("games"):($scope.show=!0,$scope.result=data.msg)})}}).controller("gameUpdateController",function($scope,$filter,$state,Game,GAME_PLATFORMS,GAME_GENRES){$scope.fields=["title","name","developer","publisher","release_at","buy_at","rate","image"],$scope.platforms=GAME_PLATFORMS,$scope.genres=GAME_GENRES,$scope.saveGame=function(){$scope.game.$update(function(data){data.success?$state.go("games"):($scope.show=!0,$scope.result=data.msg)})},$scope.loadGame=function(){$scope.game=Game.get({url:$state.params.url}),$scope.$watch("game.release_at",function(newValue){newValue&&($scope.game.release_at=$filter("date")(newValue,"yyyy-MM-dd"))}),$scope.$watch("game.buy_at",function(newValue){newValue&&($scope.game.buy_at=$filter("date")(newValue,"yyyy-MM-dd"))})},$scope.loadGame()}),angular.module("gourmetsAdmin",[]).controller("gourmetsController",function($scope,Gourmet,Count){Count.get({model:"gourmets"},function(count){$scope.count=count.count,$scope.gourmets=Gourmet.query({limit:count.count})})}).controller("gourmetCreateController",function($scope,$state,Gourmet){$scope.fields=["food","restaurant","date","image","url"],$scope.gourmet=new Gourmet,$scope.saveGourmet=function(){$scope.gourmet.$save(function(data){data.success?$state.go("gourmets"):($scope.show=!0,$scope.result=data.msg)})}}).controller("gourmetUpdateController",function($scope,$filter,$state,Gourmet){$scope.fields=["food","restaurant","date","image","url"],$scope.saveGourmet=function(){$scope.gourmet.$update(function(data){data.success?$state.go("gourmets"):($scope.show=!0,$scope.result=data.msg)})},$scope.loadGourmet=function(){$scope.gourmet=Gourmet.get({id:$state.params.id}),$scope.$watch("gourmet.date",function(newValue){newValue&&($scope.gourmet.date=$filter("date")(newValue,"yyyy-MM-dd"))})},$scope.loadGourmet()}),angular.module("hearthStoneAdmin",[]).controller("hsDecksController",function($scope,HSDeck,HS_PLAYER_CLASSES){$scope.playerClasses=HS_PLAYER_CLASSES,$scope.decks=HSDeck.query()}).controller("hsDeckCreateController",function($scope,$state,HSDeck,HS_PLAYER_CLASSES){$scope.playerClasses=HS_PLAYER_CLASSES,$scope.deck=new HSDeck,$scope.saveDeck=function(){$scope.deck.$save(function(data){data.success?$state.go("HSdecks"):($scope.show=!0,$scope.result=data.msg)})}}).controller("hsDeckUpdateController",function($scope,$state,HSDeck,HS_PLAYER_CLASSES){$scope.playerClasses=HS_PLAYER_CLASSES,$scope.saveDeck=function(){$scope.deck.$update(function(data){data.success?$state.go("HSdecks"):($scope.show=!0,$scope.result=data.msg)})},$scope.loadDeck=function(){$scope.deck=HSDeck.get({id:$state.params.id})},$scope.loadDeck()}).controller("hsCardAddController",function($scope,$state,$filter,HSCard,HSDeck,Count,HS_PLAYER_CLASSES){$scope.playerClasses=HS_PLAYER_CLASSES,$scope.neutralPage=0,$scope.classPage=0,HSCard.query(function(data){$scope.neutralCards=data}),$scope.deck=HSDeck.get({id:$state.params.deck_id},function(data){data.cards?$scope.deckCards=data.cards:$scope.deckCards=[],HSCard.query({playerClass:data.playerClass},function(data){$scope.classCards=data})}),$scope.getMoreCards=function(type,more){var page=$scope.neutralPage;-1!=type&&(page=$scope.classPage),Count.get({model:"cards",playerClass:type},function(count){if("prev"==more&&0!==page)page-=1;else{if(!("next"==more&&page<Math.ceil(count.count/12)-1))return!1;page+=1}HSCard.query({playerClass:type,offset:page},function(data){-1!=type?($scope.classCards=data,$scope.classPage=page):($scope.neutralCards=data,$scope.neutralPage=page)})})},$scope.addCard=function(card){$scope.deckCards.length>1?$filter("checkCard")(card,$scope.deckCards)&&$scope.deckCards.push(card):$scope.deckCards.push(card)},$scope.removeCard=function(card){$scope.deckCards.splice($scope.deckCards.indexOf(card),1)},$scope.addCards=function(deck,cards){deck.cards=cards,deck.$update(function(data){data.success?$state.go("HSdecks"):($scope.show=!0,$scope.result=data.msg)})}}).controller("hsSeasonsController",function($scope){}).filter("checkCard",function(){return function(item,object){for(var count=0,i=0;i<object.length;i++)if(item._id==object[i]._id&&count++,2==count)return!1;return!0}}).directive("ngCards",function(){return{restrict:"A",replace:!0,link:function(scope,element,attrs){$("a").click(function(e){e.preventDefault()})}}}),angular.module("myServices",[]).factory("Count",function($resource){return $resource("/api/count/:model")}).factory("Game",function($resource){return $resource("/api/games/:url",{url:"@url"},{update:{method:"POST"}})}).factory("Gourmet",function($resource){return $resource("/api/gourmets/:id",{id:"@_id"},{update:{method:"POST"}})}).factory("HSCard",function($resource){return $resource("/api/hearth-stone/cards")}).factory("HSDeck",function($resource){return $resource("/api/hearth-stone/decks/:id",{id:"@_id"},{update:{method:"POST"}})}).factory("HSSeason",function($resource){return $resource("/api/hearth-stone/seasons/:url",{url:"@url"},{update:{method:"POST"}})}),angular.module("adminRoutes",[]).config(function($stateProvider,$urlRouterProvider,$locationProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("index",{url:"/admin",templateUrl:"/views/admin/index.html",title:"Home"}).state("games",{url:"/admin/games",templateUrl:"/views/admin/games/list.html",controller:"gamesController",title:"Games"}).state("gameCreate",{url:"/admin/games/add",templateUrl:"/views/admin/games/create.html",controller:"gameCreateController",title:"Game Create"}).state("gameUpdate",{url:"/admin/games/:url",templateUrl:"/views/admin/games/create.html",controller:"gameUpdateController",title:"Game Update"}).state("gourmets",{url:"/admin/gourmets",templateUrl:"/views/admin/gourmets/list.html",controller:"gourmetsController",title:"Gourmets"}).state("gourmetCreate",{url:"/admin/gourmets/add",templateUrl:"/views/admin/gourmets/create.html",controller:"gourmetCreateController",title:"Gourmet Create"}).state("gourmetUpdate",{url:"/admin/gourmets/:id",templateUrl:"/views/admin/gourmets/create.html",controller:"gourmetUpdateController",title:"Gourmet Update"}).state("HSdecks",{url:"/admin/hearth-stone-decks",templateUrl:"/views/admin/hearthStone/deck_list.html",controller:"hsDecksController",title:"Hearth Stone Decks"}).state("HSdeckCreate",{url:"/admin/hearth-stone-decks/add",templateUrl:"/views/admin/hearthStone/deck_create.html",controller:"hsDeckCreateController",title:"Hearth Stone Deck Create"}).state("HSdeckUpdate",{url:"/admin/hearth-stone-decks/:id",templateUrl:"/views/admin/hearthStone/deck_create.html",controller:"hsDeckUpdateController",title:"Hearth Stone Deck Update"}).state("HScardAdd",{url:"/admin/hearth-stone-cards/:deck_id",templateUrl:"/views/admin/hearthStone/cards.html",controller:"hsCardAddController",title:"Hearth Stone Card Add"}).state("HSseasons",{url:"/admin/hearth-stone-seasons",templateUrl:"/views/admin/hearthStone/season_list.html",controller:"hsSeasonsController",title:"Hearth Stone Seasons"}),$locationProvider.html5Mode({enabled:!0,requireBase:!1})});var gamePlatforms=[{value:0,name:"PlayStation 3"},{value:1,name:"PlayStation Vita"},{value:2,name:"PlayStation 4"}],gameGenres=[{value:0,name:"Action"},{value:1,name:"Adventure"},{value:2,name:"Fighting"},{value:3,name:"Racing"},{value:4,name:"Role-Playing"},{value:5,name:"Sports"},{value:6,name:"Third-person shooter"},{value:7,name:"Strategy"}],HSplayerClasses=[{value:0,name:"Druid"},{value:1,name:"Hunter"},{value:2,name:"Mage"},{value:3,name:"Paladin"},{value:4,name:"Priest"},{value:5,name:"Rogue"},{value:6,name:"Shaman"},{value:7,name:"Warlock"},{value:8,name:"Warrior"}];angular.module("myConfig",[]).constant("GAME_PLATFORMS",gamePlatforms).constant("GAME_GENRES",gameGenres).constant("HS_PLAYER_CLASSES",HSplayerClasses);